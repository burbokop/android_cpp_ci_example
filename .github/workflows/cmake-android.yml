name: CMake on a single platform

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  BUILD_TYPE: Release
  NDK_VERSION: 25.1.8937393

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3

    - name: Create android SDK folder
      run: mkdir -p ${{github.workspace}}/Android/Sdk

    - name: Download SDK cmdline-tools
      working-directory: ${{github.workspace}}/Android/Sdk
      run: wget -q -O tmp.zip https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip && unzip tmp.zip && rm tmp.zip        

    - name: Install SDK
      working-directory: ${{github.workspace}}/Android/Sdk
      run: |      
        sudo apt update && sudo apt install -y openjdk-17-jdk-headless gradle
        sudo update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java
        java --version
        export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
        yes | ./cmdline-tools/bin/sdkmanager \
          --sdk_root=. \
          --install \
          "platforms;android-34" \
          "build-tools;33.0.1" \
          "ndk;${{env.NDK_VERSION}}"
          
    - name: Configure CMake
      run: >
        cmake
        -B ${{github.workspace}}/build
        -S ${{github.workspace}}
        -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        -DANDROID_SDK_ROOT=${{github.workspace}}/Android/Sdk
        -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/Android/Sdk/ndk/${{env.NDK_VERSION}}/build/cmake/android.toolchain.cmake
        -DANDROID_ABI=armeabi-v7a
        -DANDROID_NDK=${{github.workspace}}/Android/Sdk/ndk/${{env.NDK_VERSION}}
        -DANDROID_PLATFORM=android-34
        -DCMAKE_ANDROID_ARCH_ABI=armeabi-v7a
        -DCMAKE_ANDROID_NDK=${{github.workspace}}/Android/Sdk/ndk/${{env.NDK_VERSION}}
        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
        -DCMAKE_SYSTEM_NAME=Android
        -DCMAKE_SYSTEM_VERSION=34

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

